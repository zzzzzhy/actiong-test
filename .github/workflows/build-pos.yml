name: Build TTPOS Pos APK Cache

env:
  assistant_pack: assistant
  kds_pack: kds
  tablet_pack: tablet
  pos_pack: pos
  apk_output_path: releases
  assistant_path: ${{ github.event.inputs.branch == 'release' && 'dc_apk/TTPOS/Prod/Assistant/' || 'dc_apk/TTPOS/Test/Assistant/' }}
  kds_path: ${{ github.event.inputs.branch == 'release' && 'dc_apk/TTPOS/Prod/Kitchen/' || 'dc_apk/TTPOS/Test/Kitchen/' }}
  tablet_path: ${{ github.event.inputs.branch == 'release' && 'dc_apk/TTPOS/Prod/Menu/' || 'dc_apk/TTPOS/Test/Menu/' }}
  pos_path: ${{ github.event.inputs.branch == 'release' && 'dc_apk/TTPOS/Prod/Cashier/' || 'dc_apk/TTPOS/Test/Cashier/' }}
  #中转服务器路径
  scp_s_assistant: ${{ github.event.inputs.branch == 'release' && '/hitosea/ttpos-apk/Prod/assistant/' || '/hitosea/ttpos-apk/Test/assistant/' }}
  scp_s_kds: ${{ github.event.inputs.branch == 'release' && '/hitosea/ttpos-apk/Prod/kds/' || '/hitosea/ttpos-apk/Test/kds/' }}
  scp_s_tablet: ${{ github.event.inputs.branch == 'release' && '/hitosea/ttpos-apk/Prod/tablet/' || '/hitosea/ttpos-apk/Test/tablet/' }}
  scp_s_pos: ${{ github.event.inputs.branch == 'release' && '/hitosea/ttpos-apk/Prod/pos/' || '/hitosea/ttpos-apk/Test/pos/' }}
  #最终下载路径：www.ttpos.com/downloads
  scp_d_assistant: ${{ github.event.inputs.branch == 'release' && '/root/web/web/restant/out/downloads/Assistant/' }}
  scp_d_kds: ${{ github.event.inputs.branch == 'release' && '/root/web/web/restant/out/downloads/Kitchen/' }}
  scp_d_tablet: ${{ github.event.inputs.branch == 'release' && '/root/web/web/restant/out/downloads/Menu/' }}
  scp_d_pos: ${{ github.event.inputs.branch == 'release' && '/root/web/web/restant/out/downloads/Cashier/' }}
on:
  workflow_dispatch:
    inputs:
      branch: 
        description: 'branch (e.g., release)'
        required: true
        #default: 'release'
        type: choice
        options:
          - 'release'
      base_url: 
        description: 'base_url (e.g., base_url)'
        required: true
        #default: 'https://api.ttpos.com/api/v1'
        type: choice
        options:
          - 'https://api.ttpos.com/api/v1'
      base_ws_url: 
        description: 'base_ws_url (e.g., base_ws_url)'
        required: true
        #default: 'wss://api.ttpos.com/ws'
        type: choice
        options:
          - 'wss://api.ttpos.com/ws'
      scp: 
        description: 'scp (on/off)'
        required: true
        default: 'off'

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
        fail-fast: false
        matrix:
          apk_path_name: [ pos ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ttpos-flutter
          repository: innet8/ttpos-flutter # 目标仓库的 owner 和名称
          token: ${{ secrets.OTHER_REPO_TOKEN }} # 使用存储在 secrets 中的 token
          ref: ${{ github.event.inputs.branch }} # 可选：指定要检出的分支或 tag，默认为 default branch

      #环境
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
            channel: stable
            cache: true
            flutter-version: '3.27.3'
    
      - name: Install Melos
        run: |
            cd ttpos-flutter/
            flutter --version
            dart pub global activate melos
    
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
            distribution: 'temurin'
            java-version: '17'
            cache: 'gradle'

      - name: Melos init config
        env: 
          PUB_HOSTED_URL: https://pub.flutter-io.cn
          FLUTTER_STORAGE_BASE_URL: https://storage.flutter-io.cn
        run: |
            cd ttpos-flutter/
            melos run init
            melos bs

      - name: Config SENTRY_DSN
        id: sentry_dsn
        if: github.event.inputs.branch == 'release'
        run: |
          cd ttpos-flutter/
          sed -i 's|^SENTRY_DSN=.*|SENTRY_DSN=${{ secrets.SENTRYDSN_POS }}|' apps/pos/.env.production.local       

      - name: Config API_BASE_URL
        id: config
        run: |
            cd ttpos-flutter/
            sed -i 's|^API_BASE_URL=.*|API_BASE_URL=${{ github.event.inputs.base_url }}|' apps/pos/.env.production.local
            sed -i 's|^WS_BASE_URL=.*|WS_BASE_URL=${{ github.event.inputs.base_ws_url }}|' apps/pos/.env.production.local
            cat ./apps/pos/.env.production.local

      - name: Get Version Number
        run: |
          cd ttpos-flutter/
          version_num=$(awk '/version:/ {print $2}' apps/${{ env[format('{0}_pack', matrix.apk_path_name)] }}/pubspec.yaml | cut -d'+' -f1)
          echo "VERSION=$version_num" >> $GITHUB_ENV     

      - name: Build POS APK
        if: matrix.apk_path_name == 'pos'
        run: |
          cd ttpos-flutter/
          dart run ./scripts/build_android.dart --package=pos
          mv /home/runner/work/actiong-test/actiong-test/ttpos-flutter/${{ env.apk_output_path }}/${{ env[format('{0}_pack', matrix.apk_path_name)] }}/${{ env.VERSION }}/*.apk /home/runner/work/actiong-test/actiong-test/ttpos-flutter/${{ env.apk_output_path }}/${{ env[format('{0}_pack', matrix.apk_path_name)] }}/${{ env.VERSION }}/TTPOS-Cashier-V${{ env.VERSION }}.apk
  
      - uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_STORAGE_CREDENTIALS }}'  

      - id: 'upload-files'
        uses: 'google-github-actions/upload-cloud-storage@v2'
        with:
          path: ttpos-flutter/${{ env.apk_output_path }}/${{ env[format('{0}_pack', matrix.apk_path_name)] }}/${{ env.VERSION }}
          destination: ${{ env[format('{0}_path', matrix.apk_path_name)] }} 
          parent: false

      - name: SCP-UPLOAD
        if: github.event.inputs.scp == 'on'
        uses: Comori/ssh@v0.0.7
        with:
          host: ${{ secrets.SCP_S_HOST }}
          username: ${{ secrets.SCP_S_USER }}
          privateKey: ${{ secrets.SCP_S_RIVATEKEY }}
          command: |
            scp ttpos-flutter/${{ env[format('scp_s_{0}', matrix.apk_path_name)] }}*.apk ${{secrets.SCP_D_USER }}@${{ secrets.SCP_D_HOST }}:${{ env[format('scp_d_{0}', matrix.apk_path_name)] }}
          sourceFiles: |
            ttpos-flutter/${{ env.apk_output_path }}/${{ env[format('{0}_pack', matrix.apk_path_name)] }}/${{ env.VERSION }}/*.apk
          targetDir: ttpos-flutter/${{ env[format('scp_s_{0}', matrix.apk_path_name)] }}
          scpFirst: true          
            

          
  
